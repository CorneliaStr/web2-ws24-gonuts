type Query {
    tags: [Tag!]!
    products: [Product!]!
    product(id: ID!): Product
    favorites(customerid: ID!): Favorites!
}
type Mutation {
    createProduct(product: ProductInput!): Product!
    createTag(tag: TagInput!): Tag!
    addProductToFavorites(customerId: ID!, product: ProductInputWithId): Boolean
}

input ProductInput {
    name: String
    description: String
    price: Float
    image: String
    tags: [ProductTagInput!]!
}

input ProductInputWithId {
    id: ID!
    name: String
    description: String
    price: Float
    image: String
    tags: [TagInput!]!
}

input TagInput {
    name: String!
}

input ProductTagInput {
    id: ID!
    name: String!
}

type Tag {
    id: ID!
    name: String!
}

type Product {
    id: ID!
    name: String
    description: String
    price: Float
    image: String
    tags: [Tag!]!
}

type Account {
    email: ID!
    password: String
    admin: Boolean
}

type Customer {
    id: ID!
    surname: String
    name: String
    birthday: String
    adress: String
    account: Account!
}

type Favorites {
    id: ID!
    products: [Product!]!
    customer: Customer
}
